--- compat/bsd_compat.h.orig	2016-02-10 23:08:52 UTC
+++ compat/bsd_compat.h
@@ -87,28 +87,28 @@ void closefrom(int lowfd);
 #define	AT_SYMLINK_NOFOLLOW	0x200
 #endif
 
-#if !HAVE_DECL_FACCESSAT
-int faccessat(int fd, const char *path, int mode, int flag);
-#endif
+#undef faccessat
+#define faccessat pkg_faccessat
+int pkg_faccessat(int fd, const char *path, int mode, int flag);
 
-#if !HAVE_FSTATAT
-int fstatat(int fd, const char *path, struct stat *buf, int flag);
-#endif
+#undef fstatat
+#define fstatat pkg_fstatat
+int pkg_fstatat(int fd, const char *path, struct stat *buf, int flag);
 
-#if !HAVE_DECL_OPENAT
-int openat(int fd, const char *path, int flags, ...);
-#endif
+#undef openat
+#define openat pkg_openat
+int pkg_openat(int fd, const char *path, int flags, ...);
 
-#if !HAVE_DECL_READLINKAT
-ssize_t readlinkat(int fd, const char *restrict path, char *restrict buf, size_t bufsize);
-#endif
+#undef readlinkat
+#define readlinkat pkg_readlinkat
+ssize_t pkg_readlinkat(int fd, const char *restrict path, char *restrict buf, size_t bufsize);
 
-#if !HAVE_DECL_UNLINKAT
 # ifndef AT_REMOVEDIR
 #  define AT_REMOVEDIR	0x800
 # endif
-int unlinkat(int fd, const char *path, int flag);
-#endif
+#undef unlinkat
+#define unlinkat pkg_unlinkat
+int pkg_unlinkat(int fd, const char *path, int flag);
 
 #if !HAVE_STRTONUM
 long long strtonum(const char *, long long, long long, const char **);
--- libpkg/scripts.c.orig	2015-09-21 08:53:23 UTC
+++ libpkg/scripts.c
@@ -65,7 +65,7 @@ pkg_script_run(struct pkg * const pkg, p
 	ssize_t bytes_written;
 	size_t script_cmd_len;
 	long argmax;
-#ifdef PROC_REAP_KILL
+#ifdef PROC_REAP_KILL_XXX
 	bool do_reap;
 	struct procctl_reaper_status info;
 	struct procctl_reaper_kill killemall;
@@ -95,7 +95,7 @@ pkg_script_run(struct pkg * const pkg, p
 
 	assert(i < sizeof(map) / sizeof(map[0]));
 
-#ifdef PROC_REAP_KILL
+#ifdef PROC_REAP_KILL_XXX
 	do_reap = procctl(P_PID, getpid(), PROC_REAP_ACQUIRE, NULL) == 0;
 #endif
 	for (j = 0; j < PKG_NUM_SCRIPTS; j++) {
@@ -208,7 +208,7 @@ cleanup:
 	if (stdin_pipe[1] != -1)
 		close(stdin_pipe[1]);
 
-#ifdef PROC_REAP_KILL
+#ifdef PROC_REAP_KILL_XXX
 	/*
 	 * If the prior PROCCTL_REAP_ACQUIRE call failed, the kernel
 	 * probably doesn't support this, so don't try.
--- compat/file_at.c.orig	2015-06-22 11:49:34 UTC
+++ compat/file_at.c
@@ -33,8 +33,6 @@
 #include <stdarg.h>
 #include <unistd.h>
 
-#if !HAVE_DECL_UNLINKAT || !HAVE_DECL_FSTATAT
-
 static pthread_mutex_t file_at_lock = PTHREAD_MUTEX_INITIALIZER;
 static int file_at_dfd = -1;
 static char saved_cwd[MAXPATHLEN];
@@ -90,11 +88,9 @@ file_chdir_unlock(int dfd)
 		chdir(saved_cwd);
 	pthread_mutex_unlock(&file_at_lock);
 }
-#endif
 
-#if !HAVE_DECL_FACCESSAT
 int
-faccessat(int fd, const char *path, int mode, int flag)
+pkg_faccessat(int fd, const char *path, int mode, int flag)
 {
 	int ret;
 	char saved_cwd[MAXPATHLEN];
@@ -115,11 +111,9 @@ faccessat(int fd, const char *path, int 
 	file_chdir_unlock(fd);
 	return ret;
 }
-#endif
 
-#if !HAVE_DECL_READLINKAT
 ssize_t
-readlinkat(int fd, const char *restrict path, char *restrict buf,
+pkg_readlinkat(int fd, const char *restrict path, char *restrict buf,
 	   size_t bufsize)
 {
 	int ret;
@@ -132,11 +126,9 @@ readlinkat(int fd, const char *restrict 
 	file_chdir_unlock(fd);
 	return ret;
 }
-#endif
 
-#if !HAVE_DECL_FSTATAT
 int
-fstatat(int fd, const char *path, struct stat *buf, int flag)
+pkg_fstatat(int fd, const char *path, struct stat *buf, int flag)
 {
 	int ret;
 
@@ -152,11 +144,9 @@ fstatat(int fd, const char *path, struct
 	file_chdir_unlock(fd);
 	return ret;
 }
-#endif
 
-#if !HAVE_DECL_OPENAT
 int
-openat(int fd, const char *path, int flags, ...)
+pkg_openat(int fd, const char *path, int flags, ...)
 {
 	int ret;
 	va_list ap;
@@ -175,11 +165,9 @@ openat(int fd, const char *path, int fla
 	file_chdir_unlock(fd);
 	return ret;
 }
-#endif
 
-#if !HAVE_DECL_UNLINKAT
 int
-unlinkat(int fd, const char *path, int flag)
+pkg_unlinkat(int fd, const char *path, int flag)
 {
 	int ret;
 
@@ -195,4 +183,3 @@ unlinkat(int fd, const char *path, int f
 	file_chdir_unlock(fd);
 	return ret;
 }
-#endif
--- src/Makefile.am.orig	2016-02-10 23:08:52 UTC
+++ src/Makefile.am
@@ -44,6 +44,7 @@ pkg_SOURCES=		add.c \
 pkg_LDADD=	@OS_LDFLAGS@ \
 			$(top_builddir)/libpkg/libpkg.la \
 			$(top_builddir)/external/libsbuf.la \
+			$(top_builddir)/compat/libbsd_compat.la \
 			@LIBJAIL_LIB@ \
 			-lutil \
 			-lcrypto
--- src/Makefile.in.orig	2016-03-14 07:35:25 UTC
+++ src/Makefile.in
@@ -600,6 +600,7 @@ pkg_SOURCES = add.c \
 			which.c
 
 pkg_LDADD = @OS_LDFLAGS@ $(top_builddir)/libpkg/libpkg.la \
+	$(top_builddir)/compat/libbsd_compat.la \
 	$(top_builddir)/external/libsbuf.la @LIBJAIL_LIB@ -lutil \
 	-lcrypto $(am__append_5)
 pkg_CFLAGS = @OS_CFLAGS@ \
